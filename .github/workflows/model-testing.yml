name: Model Testing and Validation

on:
  push:
    branches: [ main ]
    paths:
      - 'pytorch/**'
      - 'app/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'pytorch/**'
      - 'app/**'

jobs:
  test-model:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r pytorch/requirements.txt
        pip install pytest pytest-cov scikit-learn pytorch-lightning torch
        
    - name: Create directories
      run: |
        mkdir -p pytorch/neural_networks/iris_dataset/data
        mkdir -p pytorch/neural_networks/iris_dataset/checkpoints
        
    # Create a dummy model checkpoint for testing
    - name: Create test model
      run: |
        python -c "
        import pytorch_lightning as pl
        from pytorch.neural_networks.iris_dataset.nn_lightning import IrisClassifier
        import torch
        import torch.nn.init as init
        
        # Create model with proper initialization
        model = IrisClassifier()
        
        # Initialize weights properly
        def init_weights(m):
            if isinstance(m, torch.nn.Linear):
                init.xavier_normal_(m.weight)
                init.zeros_(m.bias)
        
        model.apply(init_weights)
        
        # Save with proper Lightning format
        trainer = pl.Trainer()
        trainer.strategy.connect(model)
        trainer.save_checkpoint('pytorch/neural_networks/iris_dataset/checkpoints/model.ckpt')
        "
        
    - name: Generate test datasets
      run: |
        python pytorch/neural_networks/iris_dataset/data/generate_test_data.py
        
    - name: Run model tests
      run: |
        PYTHONPATH=$PYTHONPATH:$(pwd) python -m pytest pytorch/neural_networks/iris_dataset/tests/ --cov=pytorch/neural_networks/iris_dataset/ --cov-report=xml
        
    - name: Validate model metrics
      run: |
        python pytorch/neural_networks/iris_dataset/validate_model.py
        
    - name: Check for model drift
      run: |
        python pytorch/neural_networks/iris_dataset/check_drift.py 